name: Docker Images

on:
  push:
    branches:
      - '*'
      - '!master'
      - '!main'
    paths:
      - '.github/actions/release-tag/*'
      - '.github/docker-images/**/*'
      - '.github/docker-images/entrypoint.sh'
      - '.github/workflows/docker-images.yml'
      - '.github/workflows/*.sh'

env:
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'us-east-1'

jobs:
  linux-images:
    name: ${{ matrix.variant }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        variant:
        - manylinux1-x86
        - manylinux1-x64
        - manylinux2014-x86
        - manylinux2014-x64
        - manylinux2014-aarch64
        - al2012-x64
        - al2-x64
        - ubuntu-16-x64
        - debian-stretch-arm32v5
        - debian-stretch-arm32v7
        - node-10-linux-x64
        - swift-5-al2-x64
        - swift-5-centos-x64
        - swift-5-ubuntu-16-x64
        - php5-linux-x64
        - php7-linux-x64

    steps:
    - name: Checkout Sources
      uses: actions/checkout@v1

    - name: Get release_tag
      uses: ./.github/actions/release-tag
      id: tag

    - name: Install entrypoint
      run: cat .github/docker-images/entrypoint.sh | sed s/version=LATEST/version=${{ steps.tag.outputs.release_tag }}/ > .github/docker-images/${{ matrix.variant }}/entrypoint.sh

    - name: Install qemu/docker
      run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Build ${{ matrix.variant }} image
      uses: whoan/docker-build-with-cache-action@v4
      with:
        registry: docker.pkg.github.com
        username: awslabs
        password: ${{ secrets.DOCKER_TOKEN }}
        image_name: awslabs/aws-crt-builder/aws-crt-${{ matrix.variant }}
        image_tag: ${{ steps.tag.outputs.release_tag }}
        context: .github/docker-images/${{ matrix.variant }}
        build_extra_args: --compress=true

    - name: Export ${{ matrix.variant }} image to S3/channels/${{ steps.tag.outputs.release_tag }}
      run: |
        export IMAGE_TAG=${{ steps.tag.outputs.release_tag }}
        docker save docker.pkg.github.com/awslabs/aws-crt-builder/aws-crt-${{ matrix.variant }}:$IMAGE_TAG > /tmp/aws-crt-${{ matrix.variant }}-$IMAGE_TAG.tar.gz
        aws s3 cp --no-progress /tmp/aws-crt-${{ matrix.variant }}-$IMAGE_TAG.tar.gz s3://${{env.AWS_S3_BUCKET}}/channels/$IMAGE_TAG/aws-crt-${{ matrix.variant }}.tar.gz

  ###############################################################################
  # DOWNSTREAM TESTS
  ###############################################################################
  aws-c-common:
    runs-on: 'ubuntu-latest'
    needs: [linux-images]
    strategy:
      fail-fast: false
      matrix:
        target: [linux-x64]

    steps:
    - name: Checkout Source
      uses: actions/checkout@v1

    - name: Get release_tag
      uses: ./.github/actions/release-tag
      id: tag

    # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages
    - name: Build aws-c-common + consumers
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u awslabs --password-stdin
        export DOCKER_IMAGE=docker.pkg.github.com/awslabs/aws-crt-builder/aws-crt-ubuntu-16-x64:${{ steps.tag.outputs.release_tag }}
        docker pull $DOCKER_IMAGE
        docker run --env GITHUB_REF $DOCKER_IMAGE --version=${{ steps.tag.outputs.release_tag }} build -p aws-c-common --target=${{ matrix.target }}
