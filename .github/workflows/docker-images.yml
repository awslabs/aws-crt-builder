name: Docker Images

on: 
  push:
    branches: 
      - '*'
      - '!master'
    paths:
      - '.github/actions/**'
      - '.github/docker-images/**'
      - '.github/workflows/docker-images.yml'
      - '.github/workflows/*.sh'
      - 'builder/**'
  release:
    types: [published]

env:
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'us-east-1'

jobs:
  tag:
    name: Artifact release tag
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v1
    - name: Get release tag
      uses: ./.github/actions/release-tag
      id: release
      with:
        output: tag

    - run: echo TAG ${{ steps.release.outputs.release_tag }}

    - name: Store release_tag
      uses: actions/upload-artifact@v1
      with:
        name: release_tag
        path: tag

  linux-x86-x64:
    name: ${{ matrix.variant }}
    runs-on: ubuntu-latest
    needs: tag
    strategy:
      fail-fast: false
      matrix:
        variant: 
        - manylinux1-x86
        - manylinux1-x64
        - manylinux2014-x86
        - manylinux2014-x64
        - al2-x64
        - ubuntu-16-x64

    steps:
    - name: Checkout Sources
      uses: actions/checkout@v1

    - name: Fetch release_tag
      uses: actions/download-artifact@v1
      with:
        name: release_tag
        path: release_tag

    - name: Export IMAGE_TAG
      run: echo "::set-env name=IMAGE_TAG::$(cat release_tag/tag)"
    
    - name: Build ${{ matrix.variant }} image
      run: ./.github/workflows/docker_buildx.sh \
        docker.pkg.github.com \
        awslabs \
        ${{ secrets.DOCKER_TOKEN }} \
        awslabs/aws-crt-builder/aws-crt-${{ matrix.variant }}-${{ matrix.variant }} \
        ${{ env.IMAGE_TAG }} \
        .github/docker-images/${{ matrix.variant }} \
        --file=.github/docker-images/${{ matrix.variant }}/base.Dockerfile \
        --compress=true
    
    - name: Export ${{ matrix.variant }} image
      run: |
        docker save awslabs/aws-crt-builder/aws-crt-${{ matrix.variant }}:${IMAGE_TAG} | gzip > /tmp/aws-crt-${{ matrix.variant }}-${IMAGE_TAG}.tar.gz
        aws s3 cp /tmp/aws-crt-${{ matrix.variant }}.tar.gz s3://${{env.AWS_S3_BUCKET}}/docker/aws-crt-${{ matrix.variant }}-${IMAGE_TAG}.tar.gz

  linux-arm64:
    name: ${{ matrix.variant }}-${{ matrix.arch }}
    runs-on: 'ubuntu-latest'
    needs: tag
    strategy:
      matrix:
        variant: [al2]
        arch: [arm64]
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v1

    - name: Fetch release_tag
      uses: actions/download-artifact@v1
      with:
        name: release_tag
        path: release_tag

    - name: Export IMAGE_TAG
      run: echo "::set-env name=IMAGE_TAG::$(cat release_tag/tag)"

    - name: "Build ${{ matrix.variant }}-${{ matrix.arch }} image"
      run: ./.github/workflows/docker_buildx.sh \
        docker.pkg.github.com \
        awslabs \
        ${{ secrets.DOCKER_TOKEN }} \
        awslabs/aws-crt-builder/aws-crt-${{ matrix.variant }}-${{ matrix.arch }} \
        ${{ env.IMAGE_TAG }} \
        .github/docker-images/${{ matrix.variant }}-${{ matrix.arch }} \
        --file=.github/docker-images/${{ matrix.variant }}-${{ matrix.arch }}/base.Dockerfile \
        --compress=true --platform=linux/${{ matrix.arch }}

    - name: Export ${{ matrix.variant }} ${{ matrix.arch }} image
      run: |
        docker save awslabs/aws-crt-builder/aws-crt-${{ matrix.variant }}-${{ matrix.arch }}:${IMAGE_TAG} | gzip > /tmp/aws-crt-${{ matrix.variant }}-${{ matrix.arch }}-${IMAGE_TAG}.tar.gz
        aws s3 cp /tmp/aws-crt-${{ matrix.variant }}-${{ matrix.arch }}.tar.gz s3://${{env.AWS_S3_BUCKET}}/docker/aws-crt-${{ matrix.variant }}-${{ matrix.arch }}-${IMAGE_TAG}.tar.gz

  linux-arm32:
    name: ${{ matrix.variant }}-arm${{ matrix.arch }}
    runs-on: 'ubuntu-latest'
    needs: tag
    strategy:
      fail-fast: false
      matrix:
        variant: [alpine, arch]
        arch: [v6, v7]
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v1

    - name: Fetch release_tag
      uses: actions/download-artifact@v1
      with:
        name: release_tag
        path: release_tag

    - name: Export IMAGE_TAG
      run: echo "::set-env name=IMAGE_TAG::$(cat release_tag/tag)"

    - name: "Build ${{ matrix.variant }}-arm${{ matrix.arch }} image"
      run: ./.github/workflows/docker_buildx.sh \
        docker.pkg.github.com \
        awslabs \
        ${{ secrets.DOCKER_TOKEN }} \
        awslabs/aws-crt-builder/aws-crt-${{ matrix.variant }}-arm${{ matrix.arch }} \
        ${{ env.IMAGE_TAG }} \
        .github/docker-images/${{ matrix.variant }}-arm${{ matrix.arch }} \
        --file=.github/docker-images/${{ matrix.variant }}-arm${{ matrix.arch }}/base.Dockerfile \
        --compress=true --platform=linux/arm/${{ matrix.arch }}

    - name: Export ${{ matrix.variant }} arm${{ matrix.arch }} image
      run: |
        docker save awslabs/aws-crt-builder/aws-crt-${{ matrix.variant }}-arm${{ matrix.arch }}:${IMAGE_TAG} | gzip > /tmp/aws-crt-${{ matrix.variant }}-arm${{ matrix.arch }}-${IMAGE_TAG}.tar.gz
        aws s3 cp /tmp/aws-crt-${{ matrix.variant }}-arm${{ matrix.arch }}.tar.gz s3://${{env.AWS_S3_BUCKET}}/docker/aws-crt-${{ matrix.variant }}-arm${{ matrix.arch }}-${IMAGE_TAG}.tar.gz
