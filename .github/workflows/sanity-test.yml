name: Sanity Tests

on:
  push:
    branches:
      - '*'
      - '!master'
    paths:
      - '.github/workflows/sanity-test.yml'
      - 'builder/**'

env:
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'us-east-1'

jobs:
  cleanup:
    name: Clean up previous branch jobs
    runs-on: ubuntu-latest
    steps:
    - name: Clean up previous branch jobs
      uses: rokroskar/workflow-run-cleanup-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
  tag:
    name: Artifact release tag
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v1
    - name: Get release tag
      uses: ./.github/actions/release-tag
      id: release
      with:
        output: tag

    - run: echo TAG ${{ steps.release.outputs.release_tag }}

    - name: Store release_tag
      uses: actions/upload-artifact@v1
      with:
        name: release_tag
        path: tag

  package:
    name: Package builder app
    runs-on: ubuntu-latest
    needs: tag

    steps:
      - name: Checkout Source
        uses: actions/checkout@v1

      - name: Get release tag
        uses: ./.github/actions/release-tag
        id: release
        with:
          output: tag

      - run: echo TAG ${{ steps.release.outputs.release_tag }}

      - name: Store release_tag
        uses: actions/upload-artifact@v1
        with:
          name: release_tag
          path: tag

      # re-enable this when requirements.txt has actual dependencies
      # - name: Bundle dependencies
      #   run: |
      #     python3 -m pip install -r requirements.txt --target builder
      #     rm -rf builder/*.dist-info

      - name: Package builder to S3
        run: |
          mkdir -p build
          python3 -m zipapp --python="/usr/bin/env python3" --output=build/builder.pyz builder
          aws s3 cp build/builder.pyz s3://$AWS_S3_BUCKET/${{ steps.release.outputs.release_tag }}/builder.pyz
          zipinfo -1 build/builder.pyz

      - name: Artifact builder
        uses: actions/upload-artifact@v1
        with:
          name: builder
          path: build/builder.pyz

  sanity_test:
    name: Sanity Test
    strategy:
      matrix:
        host: [ubuntu-latest, macos-latest, windows-latest]
    needs: package
    runs-on: ${{ matrix.host }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v1

      - name: Install builder
        uses: actions/download-artifact@v1
        with:
          name: builder
          path: .

      - name: Sanity Test Run Compat (Unix)
        if:  matrix.host != 'windows-latest'
        run: |
          ls -al
          zipinfo -1 builder.pyz
          python3 builder.pyz run test --project tests

      - name: Sanity Test Action (Unix)
        if:  matrix.host != 'windows-latest'
        run: |
          python3 builder.pyz test --project tests

      - name: Sanity Test Build (Unix)
        if:  matrix.host != 'windows-latest'
        run: |
          python3 builder.pyz build --project tests

      - name: Sanity Test Run Compat (Windows)
        if: matrix.host == 'windows-latest'
        run: |
          choco install --no-progress vswhere
          python builder.pyz run test --project tests

      - name: Sanity Test Action (Windows)
        if: matrix.host == 'windows-latest'
        run: |
          choco install --no-progress vswhere
          python builder.pyz test --project tests

      - name: Sanity Test Build (Windows)
        if: matrix.host == 'windows-latest'
        run: |
          python builder.pyz build --project tests

  cross_compile:
    name: Cross Compile ${{matrix.arch}}
    runs-on: ubuntu-latest
    if: github.event_name != 'release'
    needs: package
    strategy:
      matrix:
        arch: [linux-armv6, linux-armv7, linux-armv8]
  
    steps:
    - name: Checkout Source
      uses: actions/checkout@v1

    - name: Install builder
      uses: actions/download-artifact@v1
      with:
        name: builder
        path: .

    - name: Build aws-crt-cpp + consumers
      run: python3 builder.pyz build downstream -p aws-crt-cpp --branch=cross-compile --platform=${{matrix.arch}} --dump-config

  downstream_test:
    strategy:
      matrix:
        project:
          - aws-c-io
          - aws-c-mqtt
          - aws-c-http
          - aws-crt-python
          - aws-crt-cpp
          - aws-crt-java
    needs: package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v1

      - name: Install builder
        uses: actions/download-artifact@v1
        with:
          name: builder
          path: .

      - name: Build ${{ matrix.project }}
        run: python3 builder.pyz build --project ${{ matrix.project }}

  sanity-tests-passed:
    name: All Sanity Tests passed
    runs-on: ubuntu-latest
    needs:
    - sanity_test
    - cross_compile
    steps:
      - run: echo "All sanity tests passed"
