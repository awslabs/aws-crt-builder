name: Create Channel

# need images created at least once per branch, even if there are no docker changes
# so that downstream projects can use the branch channel. Also anytime this
# file is updated
on:
  push:
    branches:
      - '*'
      - '!master'
      - '!main'
    paths:
      - '.github/workflows/create-channel.yml'
  create:

env:
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'us-east-1'

jobs:
  package:
    name: Package builder app
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source
      uses: actions/checkout@v1

    - name: Get release tag
      uses: ./.github/actions/release-tag
      id: tag

    - run: echo TAG ${{ steps.tag.outputs.release_tag }}

    # re-enable this when requirements.txt has actual dependencies
    # - name: Bundle dependencies
    #   run: |
    #     python3 -m pip install -r requirements.txt --target builder
    #     rm -rf builder/*.dist-info

    - name: Package builder to S3
      run: |
        export CHANNEL=${{ steps.tag.outputs.release_tag }}
        mkdir -p build
        mkdir -p staging
        cp -r builder staging/.
        python3 -m zipapp --python="/usr/bin/env python3" -m "builder.main:main" --output=build/builder staging
        aws s3 cp build/builder s3://$AWS_S3_BUCKET/channels/$CHANNEL/builder.pyz

    - name: Artifact builder
      uses: actions/upload-artifact@v1
      with:
        name: builder
        path: build/builder

  import-latest:
    name: ${{ matrix.variant }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        variant:
        - manylinux1-x86
        - manylinux1-x64
        - manylinux2014-x86
        - manylinux2014-x64
        - manylinux2014-aarch64
        - al2012-x64
        - al2-x64
        - ubuntu-16-x64
        - ubuntu-20-aarch64
        - debian-stretch-arm32v5
        - debian-stretch-arm32v7
        - node-10-linux-x64
        - swift-5-al2-x64
        - swift-5-centos-x64
        - swift-5-ubuntu-16-x64
        - rhel8-x64
        - opensuse-leap
        - fedora-34-x64
        - php5.5-linux-x64
        - php5.6-linux-x64
        - php7.0-linux-x64
        - php7.1-linux-x64
        - php7.2-linux-x64
        - php7.3-linux-x64
        - php7.4-linux-x64
        - php8.0-linux-x64

    steps:
    - name: Checkout Sources
      uses: actions/checkout@v1

    - name: Get release tag
      uses: ./.github/actions/release-tag
      id: tag

    - name: Login to docker repo
      run: aws ecr get-login-password --region us-east-1 | docker login ${{ secrets.AWS_ECR_REPO }} -u AWS --password-stdin

    - name: Import latest aws-crt-${{ matrix.variant }} image to channels
      run: |
        export IMAGE_TAG=${{ steps.tag.outputs.release_tag }}
        docker pull ${{ secrets.AWS_ECR_REPO }}/aws-crt-${{ matrix.variant }}:latest || exit 0
        docker tag ${{ secrets.AWS_ECR_REPO }}/aws-crt-${{ matrix.variant }}:latest ${{ secrets.AWS_ECR_REPO }}/aws-crt-${{ matrix.variant }}:$IMAGE_TAG
        docker push ${{ secrets.AWS_ECR_REPO }}/aws-crt-${{ matrix.variant }}:$IMAGE_TAG
        docker save ${{ secrets.AWS_ECR_REPO }}/aws-crt-${{ matrix.variant }}:$IMAGE_TAG \
        | gzip \
        | aws s3 cp - s3://${{env.AWS_S3_BUCKET}}/channels/$IMAGE_TAG/aws-crt-${{ matrix.variant }}.tar.gz
